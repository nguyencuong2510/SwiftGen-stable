defaults:
  - &default-config
    parallelism: 1
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      BUNDLE_PATH: vendor/bundle
    macos:
      xcode: "12.0.0"
    shell: /bin/bash --login -eo pipefail
  - &prepare-storage
    run:
      name: Create directories for artifacts and reports
      command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
  - &enable-ruby-auto-switching
    run:
      name: Enable Ruby Auto-Switching
      command: >
        echo "source /usr/local/share/chruby/chruby.sh" >> ~/.bash_profile;
        echo "source /usr/local/share/chruby/auto.sh" >> ~/.bash_profile;
        chruby
  - &restore-gems
    restore_cache:
      keys:
        - gems-{{ checksum "Gemfile.lock" }}
        - gems-
  - &install-gems
    run:
      name: Bundle install
      command: bundle check || bundle install
      environment:
        BUNDLE_JOBS: 4
        BUNDLE_RETRY: 3
  - &store-gems
    save_cache:
      key: gems-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  - &fetch-xcode-logs
    run:
      name: Getting Xcode activity logs
      command: find $HOME/Library/Developer/Xcode/DerivedData -name '*.xcactivitylog' -exec cp {} $CIRCLE_ARTIFACTS/xcactivitylog \; || true
  - &store-artifacts
    store_artifacts:
      path: /tmp/circleci-artifacts


version: 2
jobs:
  lint:
    <<: *default-config
    steps:
      - *prepare-storage
      - checkout
      - *enable-ruby-auto-switching
      - *restore-gems
      - *install-gems
      - *store-gems
      - run:
          name: Lint source code
          command: bundle exec rake lint:code
      - run:
          name: Lint tests source code
          command: bundle exec rake lint:tests
      - run:
          name: Lint generated output code
          command: bundle exec rake lint:output
      - run:
          name: Run Danger
          command: bundle exec danger --verbose
      - *store-artifacts

  xcode-build-and-test:
    <<: *default-config
    steps:
      - *prepare-storage
      - checkout
      - *enable-ruby-auto-switching
      - *restore-gems
      - *install-gems
      - *store-gems
      - run:
          name: Run all tests
          command: bundle exec rake xcode:test
      - run:
          name: Verify installation
          command: bundle exec rake cli:install[./standalone,./standalone/frameworks,./standalone/stencils]
      - run:
          name: Check swiftgen binary
          command: |
            ./standalone/swiftgen --version
            ./standalone/swiftgen templates list
      - store_test_results:
          path: /tmp/circleci-test-results
      - *fetch-xcode-logs
      - *store-artifacts

  spm-build-and-test:
    <<: *default-config
    steps:
      - *prepare-storage
      - checkout
      - *enable-ruby-auto-switching
      - *restore-gems
      - *install-gems
      - *store-gems
      - run:
          # TODO: This should run the tests once SPM supports testing an executable
          name: Build with SPM
          command: bundle exec rake spm:build
      - *store-artifacts

  compile-output:
    <<: *default-config
    steps:
      - *prepare-storage
      - checkout
      - *enable-ruby-auto-switching
      - *restore-gems
      - *install-gems
      - *store-gems
      - run:
          name: Compile generated code
          command: bundle exec rake output:compile
      - *store-artifacts

  check-deploy:
    <<: *default-config
    steps:
      - *prepare-storage
      - checkout
      - *enable-ruby-auto-switching
      - *restore-gems
      - *install-gems
      - *store-gems
      - restore_cache:
          keys:
            - cocoapods-{{ checksum "Podfile.lock" }}
            - cocoapods-
      - run:
          name: Lint podspec
          command: bundle exec rake pod:lint
      -  save_cache:
          key: cocoapods-{{ checksum "Podfile.lock" }}
          paths:
            - ~/.cocoapods
      - *store-artifacts


workflows:
  version: 2
  lint-buildandtest-compileoutput-checkdeploy:
    jobs:
      - check-deploy
      - lint
      - spm-build-and-test
      - xcode-build-and-test
      - compile-output:
          requires:
            - check-deploy
            - lint
            - spm-build-and-test
            - xcode-build-and-test
